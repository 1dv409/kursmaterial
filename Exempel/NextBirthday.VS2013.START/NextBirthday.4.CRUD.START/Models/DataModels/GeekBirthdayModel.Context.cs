//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NextBirthday.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GeekBirthdayEntities : DbContext
    {
        public GeekBirthdayEntities()
            : base("name=GeekBirthdayEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Birthday> Birthdays { get; set; }
    
        public virtual int DeleteBirthday(Nullable<int> birthdayId)
        {
            var birthdayIdParameter = birthdayId.HasValue ?
                new ObjectParameter("BirthdayId", birthdayId) :
                new ObjectParameter("BirthdayId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteBirthday", birthdayIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> InsertBirthday(string name, Nullable<System.DateTime> birthdate)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var birthdateParameter = birthdate.HasValue ?
                new ObjectParameter("Birthdate", birthdate) :
                new ObjectParameter("Birthdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("InsertBirthday", nameParameter, birthdateParameter);
        }
    
        public virtual int UpdateBirthday(Nullable<int> birthdayId, string name, Nullable<System.DateTime> birthdate)
        {
            var birthdayIdParameter = birthdayId.HasValue ?
                new ObjectParameter("BirthdayId", birthdayId) :
                new ObjectParameter("BirthdayId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var birthdateParameter = birthdate.HasValue ?
                new ObjectParameter("Birthdate", birthdate) :
                new ObjectParameter("Birthdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBirthday", birthdayIdParameter, nameParameter, birthdateParameter);
        }
    }
}
