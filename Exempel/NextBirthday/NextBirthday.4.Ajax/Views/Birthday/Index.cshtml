@model NextBirthday.Models.Birthday

@{
    ViewBag.Title = "Nästa  födelsedag";

    var ajaxOptions = new AjaxOptions
    {
        UpdateTargetId = "upcoming-birthday",
        Url = Url.Action("Index"),
        OnSuccess = "handleAjaxSuccess",
        OnFailure = "handleAjaxFailure"
    };
}

@using (Ajax.BeginForm(ajaxOptions))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(false)
    <div class="editor-label">
        @Html.LabelFor(model => model.Name):
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Name)
        @Html.ValidationMessageFor(model => model.Name)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.Birthdate):
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Birthdate)
        @Html.ValidationMessageFor(model => model.Birthdate)
    </div>
    <p>
        <input type="submit" value="Skicka" />
    </p>
}

<div id="upcoming-birthday">
    @Html.Partial("_UpcomingBirthday")
</div>

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function handleAjaxSuccess(ajaxContext) {
            // Remove all none property errors.
            if ($('div[data-valmsg-summary="true"]').length !== 0) {
                if ($('div[data-valmsg-summary="true"]').hasClass("validation-summary-errors")) {
                    $('div[data-valmsg-summary="true"]').removeClass("validation-summary-errors");
                    $('div[data-valmsg-summary="true"]').addClass("validation-summary-valid");
                }
                $('div[data-valmsg-summary="true"] ul').empty();
            }
        }

        function handleAjaxFailure(ajaxContext) {
            // Empty the ajax target element.
            $('#upcoming-birthday').empty();
            //$("#upcoming-birthday").html("<span  class='field-validation-error'>" + ajaxContext.responseText + "</span>");

            // Convert the response text, a JSON string, into a dictionary.
            var errors = JSON.parse(ajaxContext.responseText)["Errors"];

            // Show property errors.
            $('form').validate().showErrors(errors);

            // Show none property errors. Insert validation summary elements, if we need to, and append 
            // form errors to the validation summary.
            if (errors[""] !== undefined) {
                if ($('div[data-valmsg-summary="true"]').length === 0) {
                    $('form').prepend('<div class="validation-summary-errors" data-valmsg-summary="true"><ul></ul></div>');
                }
                else if ($('div[data-valmsg-summary="true"]').hasClass("validation-summary-valid")) {
                    $('div[data-valmsg-summary="true"]').removeClass("validation-summary-valid");
                    $('div[data-valmsg-summary="true"]').addClass("validation-summary-errors");
                }
                $('div[data-valmsg-summary="true"] ul').empty();
                for (var i in errors[""]) {
                    $('div[data-valmsg-summary="true"] ul').append("<li>" + errors[""][i] + "</li>");
                }
            }
        }
    </script>

}
