//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeekTweet.Domain
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    internal partial class GeekTweetEntities : DbContext
    {
        public GeekTweetEntities()
            : base("name=GeekTweetEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Tweet> Tweets { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int DeleteTweet(Nullable<int> tweetId)
        {
            var tweetIdParameter = tweetId.HasValue ?
                new ObjectParameter("TweetId", tweetId) :
                new ObjectParameter("TweetId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTweet", tweetIdParameter);
        }
    
        public virtual int DeleteUser(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUser", userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> InsertTweet(Nullable<int> userId, string text, Nullable<System.DateTime> createdAt)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            var createdAtParameter = createdAt.HasValue ?
                new ObjectParameter("CreatedAt", createdAt) :
                new ObjectParameter("CreatedAt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("InsertTweet", userIdParameter, textParameter, createdAtParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> InsertUser(string id, string name, string screenName, Nullable<System.DateTime> nextUpdate)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var screenNameParameter = screenName != null ?
                new ObjectParameter("ScreenName", screenName) :
                new ObjectParameter("ScreenName", typeof(string));
    
            var nextUpdateParameter = nextUpdate.HasValue ?
                new ObjectParameter("NextUpdate", nextUpdate) :
                new ObjectParameter("NextUpdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("InsertUser", idParameter, nameParameter, screenNameParameter, nextUpdateParameter);
        }
    
        public virtual int UpdateTweet(Nullable<int> tweetId, Nullable<int> userId, string text, Nullable<System.DateTime> createdAt)
        {
            var tweetIdParameter = tweetId.HasValue ?
                new ObjectParameter("TweetId", tweetId) :
                new ObjectParameter("TweetId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            var createdAtParameter = createdAt.HasValue ?
                new ObjectParameter("CreatedAt", createdAt) :
                new ObjectParameter("CreatedAt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTweet", tweetIdParameter, userIdParameter, textParameter, createdAtParameter);
        }
    
        public virtual int UpdateUser(Nullable<int> userId, string id, string name, string screenName, Nullable<System.DateTime> nextUpdate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var screenNameParameter = screenName != null ?
                new ObjectParameter("ScreenName", screenName) :
                new ObjectParameter("ScreenName", typeof(string));
    
            var nextUpdateParameter = nextUpdate.HasValue ?
                new ObjectParameter("NextUpdate", nextUpdate) :
                new ObjectParameter("NextUpdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUser", userIdParameter, idParameter, nameParameter, screenNameParameter, nextUpdateParameter);
        }
    }
}
